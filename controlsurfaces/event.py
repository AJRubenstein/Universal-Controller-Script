
class Event:
    """
    A class representing a MIDI event mapped to a control surface

    Subclasses of this object should be generated by device modules, so that it
    can then be processed by plugin modules.
    """
    
    def __init__(self, control, value: float) -> None:
        """
        Create an event object

        This should be called when recognising an event

        ### Args:
        * `control` (`ControlSurface`): control associated with this event
        * `value` (`float`): value of the event (0 - 1.0)
        """
        self._control = control
        self._value = value

    def getControl(self):
        """
        Get a reference to the control surface associated with the event

        ### Returns:
        * `ControlSurface`: control surface
        """
        return self._control
    
    def getValue(self):
        """
        Returns the value associated with this event

        ### Returns:
        * `float`: value of the event (0 - 1.0)
        """
        return self._value
